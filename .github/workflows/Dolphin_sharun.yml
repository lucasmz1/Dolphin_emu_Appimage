# This is a basic workflow to help you get started with Actions

name: Sharun CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 12th day-of-month.
  schedule:
    - cron: "0 0 */6 * *"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-stable"
  build-stable:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Prerequisites
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y
          sudo apt update
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt install -y \
           build-essential \
           ca-certificates \
           ccache \
           cmake \
           curl \
           desktop-file-utils \
           dialog \
           dpkg \
           ffmpeg \
           g++ \
           g++-11 \
           gcc \
           gcc-11 \
           gettext \
           git \
           libao-dev \
           libasound2-dev \
           libavcodec-dev \
           libavdevice-dev \
           libavformat-dev \
           libavutil-dev \
           libbluetooth-dev \
           libbz2-dev \
           libc6-dev \
           libc++abi-dev \
           libc++-dev \
           libcurl4-openssl-dev \
           libevdev-dev \
           libfmt-dev \
           libfuse2 \
           libgl1-mesa-dev \
           libglu1-mesa-dev \
           libgtk2.0-dev \
           libhidapi-dev \
           liblz4-dev \
           liblzma-dev \
           liblzo2-dev \
           libmbedtls-dev \
           libminiupnpc-dev \
           libopus-dev \
           libpangocairo-1.0-0 \
           libpipewire-0.3-0 \
           libpipewire-0.3-modules \
           libpng-dev \
           libpugixml-dev \
           libpulse-dev \
           libqt6svg6-dev \
           libreadline-dev \
           libsdl1.2-dev \
           libsfml-dev \
           libspa-0.2-dev \
           libspa-0.2-modules \
           libssl-dev \
           libstdc++6 \
           libswscale-dev \
           libsystemd-dev \
           libudev-dev
           libudev-dev \
           libusb-1.0-0-dev \
           libwayland-dev \
           libxcb-cursor0 \
           libxcb-cursor-dev \
           libxcb-icccm4 \
           libxcb-image0-dev \
           libxcb-keysyms1 \
           libxcb-randr0 \
           libxcb-render-util0 \
           libxext-dev \
           libxi-dev \
           libxrandr-dev \
           libzip-dev \
           libzstd-dev \
           make \
           mesa-common-dev \
           mesa-utils \
           mesa-vulkan-drivers \
           ninja-build \
           p7zip \
           p7zip-full \
           pipewire-alsa \
           pipewire-audio-client-libraries \
           pkg-config \
           pulseaudio \
           qt6-base-private-dev \
           qt6ct \
           wget \
           x11-utils \
           xvfb \
           zlib1g-dev

          git clone --filter="blob:none" --depth=1 -b master https://github.com/dolphin-emu/dolphin.git dolphin-emu
          cd ./dolphin-emu
          git submodule update --init --recursive
          [ "${COMMIT:=}" ] && git fetch --unshallow --tags && git checkout "$COMMIT"
          mkdir -p "$HOME/.ccache"
          mkdir Build && cd Build
          cmake .. -GNinja -DLINUX_LOCAL_DEV=true
          sudo ninja install
          cd ../../

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          chmod +x ./dolphin-emu-appimage.sh 
          ./dolphin-emu-appimage.sh

      - name: release
        uses: "marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303"
        with:
          title: Continuous Sharun
          automatic_release_tag: continuous-Sharun
          prerelease: false
          draft: false
          files: /home/runner/work/Dolphin_emu_Appimage/Dolphin_emu_Appimage/*.AppImage*
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
