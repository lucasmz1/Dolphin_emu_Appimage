# This is a basic workflow to help you get started with Actions

name: Sharun CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 12th day-of-month.
  schedule:
    - cron: "0 0 */6 * *"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-stable"
  build-stable:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Prerequisites
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y
          sudo apt update
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt install -y libstdc++6 libc++-dev libc++abi-dev make cmake gcc g++ ninja-build xvfb wget curl mesa-vulkan-drivers \
            qt6ct pipewire-alsa libspa-0.2-dev libpipewire-0.3-0 libpipewire-0.3-modules mesa-common-dev \
            libspa-0.2-modules libxcb-cursor0 build-essential git ffmpeg mesa-utils pipewire-audio-client-libraries \
            libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libevdev-dev libusb-1.0-0-dev libglu1-mesa-dev libwayland-dev \
            libxrandr-dev libxi-dev libpangocairo-1.0-0 qt6-base-private-dev libqt6svg6-dev libbluetooth-dev \
            libasound2-dev libpulse-dev libgl1-mesa-dev libcurl4-openssl-dev libsystemd-dev x11-utils libxcb-keysyms1 libxcb-randr0 \
            libxcb-render-util0 libxcb-icccm4 libxcb-image0-dev libxcb-cursor-dev libsdl1.2-dev libxext-dev libao-dev 
          ####################################################################
          sudo apt-get install -y build-essential dialog dpkg liblz4-dev liblzma-dev libssl-dev libopus-dev libpng-dev \
          libzip-dev libzstd-dev zlib1g-dev p7zip p7zip-full libsfml-dev libminiupnpc-dev libmbedtls-dev libpugixml-dev \
          libbz2-dev liblzo2-dev libc6-dev libhidapi-dev libavdevice-dev libfmt-dev gettext ccache
          sudo apt install pkg-config gcc libxext-dev libreadline-dev libglu1-mesa-dev libudev-dev -y
          sudo apt install --no-install-recommends ca-certificates ninja-build git cmake make pkg-config libudev-dev \
            libsfml-dev libminiupnpc-dev libmbedtls-dev libhidapi-dev libpugixml-dev libbz2-dev libzstd-dev liblzo2-dev libpng-dev -y

          git clone --filter="blob:none" --depth=1 -b master https://github.com/dolphin-emu/dolphin.git dolphin-emu
          cd ./dolphin-emu
          git submodule update --init --recursive
          [ "${COMMIT:=}" ] && git fetch --unshallow --tags && git checkout "$COMMIT"
          HEAD="$(git rev-parse --short HEAD)"
          DATE="$(git show -s --format=%cd --date=format:%Y.%m.%d)"
          VERSION="${DATE}_$HEAD"
          mkdir -p "$HOME/.ccache"
          mkdir Build && cd Build
          cmake .. -GNinja -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-11 -DLINUX_LOCAL_DEV=true
          sudo ninja install
          cd ../../

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          chmod +x ./dolphin-emu-appimage.sh 
          ./dolphin-emu-appimage.sh

      - name: release
        uses: "marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303"
        with:
          title: Continuous Sharun
          automatic_release_tag: continuous-Sharun
          prerelease: false
          draft: false
          files: /home/runner/work/Dolphin_emu_Appimage/Dolphin_emu_Appimage/*.AppImage*
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
