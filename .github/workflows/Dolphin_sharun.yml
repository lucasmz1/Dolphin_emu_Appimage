# This is a basic workflow to help you get started with Actions

name: Sharun CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 12th day-of-month.
  schedule:
    - cron: "0 0 */6 * *"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    container: artixlinux/artixlinux:latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Prerequisites
        run: |
          sed -i 's/DownloadUser/#DownloadUser/g' /etc/pacman.conf
          pacman -Syu --noconfirm base-devel \
            strace \
            patchelf \
            curl \
            wget \
            git \
            artix-archlinux-support \
            llvm \
            mesa \
            xorg-server-xvfb \
            vulkan-radeon \
            vulkan-intel \
            vulkan-nouveau

          pacman-key --init && pacman-key --populate archlinux
          printf "\n[extra]\nInclude = /etc/pacman.d/mirrorlist-arch\n" | tee -a /etc/pacman.conf
          pacman -Syu --noconfirm zsync \
            dolphin-emu \
            pulseaudio \
            pulseaudio-alsa \
            pipewire-audio \
            qt6ct

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          chmod +x ./dolphin-emu-appimage.sh 
          ./dolphin-emu-appimage.sh

      - name: release
        uses: "marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303"
        with:
          title: Continuous Sharun
          automatic_release_tag: continuous-Sharun
          prerelease: false
          draft: false
          files: /home/runner/work/Dolphin_emu_Appimage/Dolphin_emu_Appimage/*.AppImage*
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
